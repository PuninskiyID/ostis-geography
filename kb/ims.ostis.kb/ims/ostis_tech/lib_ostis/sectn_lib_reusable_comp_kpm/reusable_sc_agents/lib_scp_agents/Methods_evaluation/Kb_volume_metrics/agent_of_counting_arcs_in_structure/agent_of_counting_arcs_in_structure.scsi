agent_of_counting_arcs_in_structure
=> nrel_main_idtf:
	[агентная scp-программа подсчета количества sc-дуг в струтуре] (* <- lang_ru;; *);
=> nrel_main_idtf:
	[agent scp-program of counting number of sc-arcs in structure] (* <- lang_en;; *);
<- agent_scp_program;;

scp_program -> agent_of_counting_arcs_in_structure
	(*
	-> rrel_params: .agent_of_counting_arcs_in_structure_params 
		(*
		-> rrel_1: rrel_in: _event;;
		-> rrel_2: rrel_in: _input_arc;;
		*);;

	-> rrel_operators: .agent_of_counting_arcs_in_structure_operator_set 
		(*
		-> rrel_init: .agent_of_counting_arcs_in_structure_operator_get_quest
			(*
			<- searchElStr3;;

			-> rrel_1: rrel_assign: rrel_scp_var: _temp;;
			-> rrel_2: rrel_fixed: rrel_scp_var: _input_arc;;
			-> rrel_3: rrel_assign: rrel_scp_var: _quest;;

			=> nrel_goto: .agent_of_counting_arcs_in_structure_operator_check_action;;
			*);;
				 
		-> .agent_of_counting_arcs_in_structure_operator_check_action
			(*
			<- searchElStr3;;

			-> rrel_1: rrel_fixed: rrel_scp_const: action_to_count_arcs_in_structure;;
			-> rrel_2: rrel_assign: rrel_pos_const_perm: rrel_scp_var: _arc1;;
			-> rrel_3: rrel_fixed: rrel_scp_var: _quest;;

			=> nrel_then: .agent_of_counting_arcs_in_structure_operator_get_first_argument;;
			=> nrel_else: .agent_of_counting_arcs_in_structure_operator_return;;
			*);;

		-> .agent_of_counting_arcs_in_structure_operator_get_first_argument
			(*
			<- searchElStr3;;

			-> rrel_1: rrel_fixed: rrel_scp_var: _quest;;
			-> rrel_2: rrel_assign: rrel_scp_var: rrel_pos_const_perm: _arc1;;
			-> rrel_3: rrel_assign: rrel_scp_var: rrel_struct: _struct;;

			=> nrel_then: .agent_of_counting_arcs_in_structure_operator_get_context;;
			=> nrel_else: .agent_of_counting_arcs_in_structure_operator_invalid_first_argument;;
			*);;

		-> .agent_of_counting_arcs_in_structure_operator_invalid_first_argument
			(*
			<- contAssign;;

			-> rrel_1: rrel_assign: rrel_scp_var: _validation_message;;
			-> rrel_2: rrel_fixed: rrel_scp_const: [Wrong first parameter! It must be a structure(rrel_struct).];;

			=> nrel_goto: .agent_of_counting_arcs_in_structure_operator_validation_failed;;
			*);;

		-> .agent_of_counting_arcs_in_structure_operator_get_context
			(*
			<- searchElStr5;;

			-> rrel_1: rrel_fixed: rrel_scp_var: _quest;;
			-> rrel_2: rrel_assign: rrel_common: rrel_scp_var: _arc1;;
			-> rrel_3: rrel_assign: rrel_scp_var: _context;;
			-> rrel_4: rrel_assign: rrel_pos_const_perm: rrel_scp_var: _arc2;;
			-> rrel_5: rrel_fixed: rrel_scp_const: nrel_context_of_action;;

			=> nrel_then: .agent_of_counting_arcs_in_structure_operator_validate_context;;
			=> nrel_else: .agent_of_counting_arcs_in_structure_operator_set_context_existence_to_false;;
			*);;

		-> .agent_of_counting_arcs_in_structure_operator_validate_context
			(*
			<- ifType;;

			-> rrel_1: rrel_fixed: rrel_scp_var: rrel_struct: _context;;

			=> nrel_then: .agent_of_counting_arcs_in_structure_operator_set_context_existence_to_true;;
			=> nrel_else: .agent_of_counting_arcs_in_structure_operator_invalid_context;;
			*);;

		-> .agent_of_counting_arcs_in_structure_operator_invalid_context
			(*
			<- contAssign;;

			-> rrel_1: rrel_assign: rrel_scp_var: _validation_message;;
			-> rrel_2: rrel_fixed: rrel_scp_const: [Wrong second parameter! It must be a structure(rrel_struct).];;

			=> nrel_goto: .agent_of_counting_arcs_in_structure_operator_validation_failed;;
			*);;

		-> .agent_of_counting_arcs_in_structure_operator_set_context_existence_to_true
			(*
			<- contAssign;;
			
			-> rrel_1: rrel_assign: rrel_scp_var:  _is_context_exist;;
			-> rrel_2: rrel_fixed: rrel_scp_const: [true];;

			=> nrel_goto: .agent_of_counting_arcs_in_structure_operator1;;
			*);;

		-> .agent_of_counting_arcs_in_structure_operator_set_context_existence_to_false
			(*
			<- contAssign;;
			
			-> rrel_1: rrel_assign: rrel_scp_var:  _is_context_exist;;
			-> rrel_2: rrel_fixed: rrel_scp_const: [false];;

			=> nrel_goto: .agent_of_counting_arcs_in_structure_operator1;;
			*);;

		-> .agent_of_counting_arcs_in_structure_operator1
			(*
			<- contAssign;;

			-> rrel_1: rrel_assign: rrel_scp_var: _number_of_arcs;;
			-> rrel_2: rrel_fixed: rrel_scp_const: [0];;

			=> nrel_goto: .agent_of_counting_arcs_in_structure_operator2;; 
			*);;

		-> .agent_of_counting_arcs_in_structure_operator2
			(*
			<- searchSetStr3;;

			-> rrel_1: rrel_fixed: rrel_scp_var: _struct;;
			-> rrel_2: rrel_assign: rrel_scp_var: rrel_pos_const_perm: _arc1;;
			-> rrel_3: rrel_assign: rrel_scp_var: _element;;

			-> rrel_set_3: rrel_assign: rrel_scp_var: _all_elements;;

			=> nrel_then: .agent_of_counting_arcs_in_structure_operator3A;;
			=> nrel_else: .agent_of_counting_arcs_in_structure_operator4B;;
			*);;

		-> .agent_of_counting_arcs_in_structure_operator3A
			(*
			<- searchElStr3;;

			-> rrel_1: rrel_fixed: rrel_scp_var: _all_elements;;
			-> rrel_2: rrel_assign: rrel_scp_var: rrel_pos_const_perm: _arc1;;
			-> rrel_3: rrel_assign: rrel_scp_var: _element;;

			=> nrel_then: .agent_of_counting_arcs_in_structure_operator3B;;
			=> nrel_else: .agent_of_counting_arcs_in_structure_operator4A;;
			*);;

		-> .agent_of_counting_arcs_in_structure_operator3B
			(*
			<- eraseEl;;

			-> rrel_1: rrel_fixed: rrel_erase: rrel_scp_var: rrel_pos_const_perm: _arc1;;

			=> nrel_goto: .agent_of_counting_arcs_in_structure_operator3C1;;
			*);;

		-> .agent_of_counting_arcs_in_structure_operator3C1
			(*
			<- ifType;;

			-> rrel_1: rrel_fixed: rrel_scp_var: rrel_node: _element;;

			=> nrel_then: .agent_of_counting_arcs_in_structure_operator3A;;
			=> nrel_else: .agent_of_counting_arcs_in_structure_operator3C2;;
			*);;

		-> .agent_of_counting_arcs_in_structure_operator3C2
			(*
			<- ifType;;

			-> rrel_1: rrel_fixed: rrel_scp_var: rrel_link: _element;;

			=> nrel_then: .agent_of_counting_arcs_in_structure_operator3A;;
			=> nrel_else: .agent_of_counting_arcs_in_structure_operator3D1;;
			*);;

		-> .agent_of_counting_arcs_in_structure_operator3D1
			(*
			<- stringIfEq;;			
			
			-> rrel_1: rrel_fixed: rrel_scp_var:  _is_context_exist;;
			-> rrel_2: rrel_fixed: rrel_scp_const: [true];;

		 	=> nrel_then: .agent_of_counting_arcs_in_structure_operator3D2;;
		 	=> nrel_else: .agent_of_counting_arcs_in_structure_operator3E;;
			*);;

		-> .agent_of_counting_arcs_in_structure_operator3D2
			(*
			<- searchElStr3;;

			-> rrel_1: rrel_fixed: rrel_scp_var: _context;;
			-> rrel_2: rrel_assign: rrel_scp_var: rrel_pos_const_perm: _arc1;;
			-> rrel_3: rrel_fixed: rrel_scp_var: _element;;

			=> nrel_then: .agent_of_counting_arcs_in_structure_operator3E;;
			=> nrel_else: .agent_of_counting_arcs_in_structure_operator3A;;
			*);;

		-> .agent_of_counting_arcs_in_structure_operator3E
			(*
			<- contAdd;;

			-> rrel_1: rrel_fixed: rrel_scp_var: _number_of_arcs;;
			-> rrel_2: rrel_fixed: rrel_scp_var: _number_of_arcs;;
			-> rrel_3: rrel_fixed: rrel_scp_const: [1];;

			=> nrel_goto: .agent_of_counting_arcs_in_structure_operator3A;;
			*);;

		-> .agent_of_counting_arcs_in_structure_operator4A
			(*
			<- eraseEl;;

			-> rrel_1: rrel_fixed: rrel_erase: rrel_scp_var: _all_elements;;

			=> nrel_goto: .agent_of_counting_arcs_in_structure_operator4B;;
			*);;

		-> .agent_of_counting_arcs_in_structure_operator4B
			(*
			<- eraseEl;;

			-> rrel_1: rrel_fixed: rrel_erase: rrel_scp_var: _is_context_exist;;

			=> nrel_goto: .agent_of_counting_arcs_in_structure_operator_gen_answer;;
			*);;

		-> .agent_of_counting_arcs_in_structure_operator_gen_answer
			(*
			<- call;;

			-> rrel_1: rrel_fixed: rrel_scp_const: proc_of_generation_of_metrics_answer;;
			-> rrel_2: rrel_fixed: rrel_scp_const: .agent_of_counting_arcs_in_structure_operator_gen_answer_params 
				(*
				-> rrel_1: rrel_fixed: rrel_scp_var: _quest;;
				-> rrel_2: rrel_fixed: rrel_scp_const: action_to_count_arcs_in_structure;;
				-> rrel_3: rrel_fixed: rrel_scp_var: _number_of_arcs;;
				*);;
			-> rrel_3: rrel_assign: rrel_scp_var: _descr1;;

			=> nrel_goto: .agent_of_counting_arcs_in_structure_operator_gen_answer_wait_return;;
			*);;

		-> .agent_of_counting_arcs_in_structure_operator_gen_answer_wait_return
			(*
			<- waitReturn;;

			-> rrel_1: rrel_fixed: rrel_scp_var: _descr1;;

			=> nrel_goto: .agent_of_counting_arcs_in_structure_operator_question_finished_successfully;;
			*);;

		-> .agent_of_counting_arcs_in_structure_operator_question_finished_successfully
			(*
			<- genElStr3;;

			-> rrel_1: rrel_fixed: rrel_scp_const: question_finished_successfully;;
			-> rrel_2: rrel_assign: rrel_pos_const_perm: rrel_scp_var: rrel_const: _arc1;;
			-> rrel_3: rrel_fixed: rrel_scp_var: _quest;;

			=> nrel_goto: .agent_of_counting_arcs_in_structure_operator_return;; 
			*);;

		-> .agent_of_counting_arcs_in_structure_operator_validation_failed
			(*
			<- call;;

			-> rrel_1: rrel_fixed: rrel_scp_const: proc_of_adding_validating_message;;
			-> rrel_2: rrel_fixed: rrel_scp_const: .agent_of_counting_arcs_in_structure_operator_validation_failed_params 
				(*
				-> rrel_1: rrel_fixed: rrel_scp_var: _quest;;
				-> rrel_2: rrel_fixed: rrel_scp_var: _validation_message;;
				*);;
			-> rrel_3: rrel_assign: rrel_scp_var: _descr2;;

			=> nrel_goto: .agent_of_counting_arcs_in_structure_operator_validation_failed_wait;;
			*);;

		-> .agent_of_counting_arcs_in_structure_operator_validation_failed_wait
			(*
			<- waitReturn;;

			-> rrel_1: rrel_fixed: rrel_scp_var: _descr2;;

			=> nrel_goto: .agent_of_counting_arcs_in_structure_operator_return;;
			*);;

		-> .agent_of_counting_arcs_in_structure_operator_return
			(*
			<- return;;
			*);;
		*);;
	*);;
