scp_program -> proc_of_finding_identifier_extended 
	(*	
	-> rrel_params: .proc_of_finding_identifier_extended_params
		(*
		-> rrel_1: rrel_in: _elem;;
		-> rrel_2: rrel_in: _answer_proc_of_finding_identifier_extended;;
		*);;

    -> rrel_operators: .proc_of_finding_identifier_extended_operator_set 
		(*
		-> rrel_init: .proc_of_finding_identifier_extended_operator0
			(*
		 	<- varAssign;;

		 	-> rrel_1: rrel_assign: rrel_scp_var: _relation;;
			-> rrel_2: rrel_fixed: rrel_scp_const: nrel_main_idtf;;

            => nrel_goto: .proc_of_finding_identifier_extended_operator1A;;
		 	*);;

		-> .proc_of_finding_identifier_extended_operator1A
			(*
		 	<- searchSetStr5;;

		 	-> rrel_1: rrel_fixed: rrel_scp_var: _elem;;
		 	-> rrel_2: rrel_assign: rrel_const: rrel_common: rrel_scp_var: _arc1;;
		 	-> rrel_3: rrel_assign: rrel_scp_var: _elem2;;
            -> rrel_4: rrel_assign: rrel_pos_const_perm: rrel_scp_var: _arc2;;
		 	-> rrel_5: rrel_fixed: rrel_scp_var: _relation;;
	         
            -> rrel_set_3: rrel_assign: rrel_scp_var: _mainset;;

            => nrel_then: .proc_of_finding_identifier_extended_operator2A;;
			=> nrel_else: .proc_of_finding_identifier_extended_operator1B;;
            *);;

        -> .proc_of_finding_identifier_extended_operator1B
			(*
		 	<- ifCoin;;

		 	-> rrel_1: rrel_fixed: rrel_scp_var: _relation;;
			-> rrel_2: rrel_fixed: rrel_scp_const: nrel_idtf;;

            => nrel_then: .proc_of_finding_identifier_extended_operator_return;;
			=> nrel_else: .proc_of_finding_identifier_extended_operator1C;;
		 	*);;

		-> .proc_of_finding_identifier_extended_operator1C
			(*
		 	<- varAssign;;

		 	-> rrel_1: rrel_assign: rrel_scp_var: _relation;;
			-> rrel_2: rrel_fixed: rrel_scp_const: nrel_idtf;;

            => nrel_goto: .proc_of_finding_identifier_extended_operator1A;;
		 	*);;

		-> .proc_of_finding_identifier_extended_operator2A 
			(*
		 	<- searchElStr3;;

		 	-> rrel_1: rrel_fixed: rrel_scp_var: _mainset;;
		 	-> rrel_2: rrel_assign: rrel_pos_const_perm: rrel_scp_var: _arc2;;
		 	-> rrel_3: rrel_assign: rrel_scp_var: _idtf;;

		 	=> nrel_then: .proc_of_finding_identifier_extended_operator2B;;
            => nrel_else: .proc_of_finding_identifier_extended_operator5;;
		 	*);; 

		-> .proc_of_finding_identifier_extended_operator2B 
			(*
		 	<- eraseEl;;

		 	-> rrel_1: rrel_fixed: rrel_erase: rrel_scp_var: _arc2;;

            => nrel_goto: .proc_of_finding_identifier_extended_operator2C;;
		 	*);;

		-> .proc_of_finding_identifier_extended_operator2C 
			(*
			<- genElStr3;;

		 	-> rrel_1: rrel_fixed: rrel_scp_var: _answer_proc_of_finding_identifier_extended;;
		 	-> rrel_2: rrel_assign: rrel_pos_const_perm: rrel_scp_var: rrel_const: _arc1;;
		 	-> rrel_3: rrel_fixed: rrel_scp_var: _idtf;;

            => nrel_goto: .proc_of_finding_identifier_extended_operator3A;;
		 	*);;

		-> .proc_of_finding_identifier_extended_operator3A
			(*
		 	<- searchSetStr5;;

		 	-> rrel_1: rrel_fixed: rrel_scp_var: _elem;;
		 	-> rrel_2: rrel_assign: rrel_const: rrel_common: rrel_scp_var: _arc1;;
		 	-> rrel_3: rrel_fixed: rrel_scp_var: _idtf;;
            -> rrel_4: rrel_assign: rrel_const: rrel_pos_const_perm: rrel_scp_var: _arc2;;
		 	-> rrel_5: rrel_fixed: rrel_scp_var: rrel_norole_reltion: _relation;;
	         
            -> rrel_set_2: rrel_fixed: rrel_scp_var: _answer_proc_of_finding_identifier_extended;;
		 	-> rrel_set_4: rrel_fixed: rrel_scp_var: _answer_proc_of_finding_identifier_extended;;

            => nrel_goto: .proc_of_finding_identifier_extended_operator3B;;
            *);;

		-> .proc_of_finding_identifier_extended_operator3B 
			(*
			<- searchSetStr3;;

		 	-> rrel_1: rrel_assign: rrel_scp_var: rrel_not_relation: _lang;;
		 	-> rrel_2: rrel_assign: rrel_pos_const_perm: rrel_scp_var: _arc1;;
		 	-> rrel_3: rrel_fixed: rrel_scp_var: _idtf;;

            -> rrel_set_1: rrel_assign: rrel_scp_var: _set_of_languages;;

		 	=> nrel_then: .proc_of_finding_identifier_extended_operator4A;;
			=> nrel_else: .proc_of_finding_identifier_extended_operator_return;;
		 	*);;  

		-> .proc_of_finding_identifier_extended_operator4A 
			(*
		 	<- searchElStr3;;

		 	-> rrel_1: rrel_fixed: rrel_scp_var: _set_of_languages;;
		 	-> rrel_2: rrel_assign: rrel_pos_const_perm: rrel_scp_var: _arc1;;
		 	-> rrel_3: rrel_assign: rrel_scp_var: _lang;;

		 	=> nrel_then: .proc_of_finding_identifier_extended_operator4B;;
            => nrel_else: .proc_of_finding_identifier_extended_operator2A;;
		 	*);; 

		-> .proc_of_finding_identifier_extended_operator4B 
			(*
			<- eraseEl;;

		 	-> rrel_1: rrel_fixed: rrel_erase: rrel_scp_var: _arc1;;

            => nrel_goto: .proc_of_finding_identifier_extended_operator4C;;
		 	*);;
  
		-> .proc_of_finding_identifier_extended_operator4C 
			(*
		 	<- searchElStr3;;

		 	-> rrel_1: rrel_fixed: rrel_scp_const: languages;;
		 	-> rrel_2: rrel_assign: rrel_pos_const_perm: rrel_scp_var: _arc1;;
		 	-> rrel_3: rrel_fixed: rrel_scp_var: _lang;;

		 	=> nrel_then: .proc_of_finding_identifier_extended_operator4D;;
            => nrel_else: .proc_of_finding_identifier_extended_operator4A;;
		 	*);;

		-> .proc_of_finding_identifier_extended_operator4D
			(*
		 	<- searchSetStr3;;

		 	-> rrel_1: rrel_fixed: rrel_scp_var: _lang;;
		 	-> rrel_2: rrel_assign: rrel_const: rrel_pos_const_perm: rrel_scp_var: _arc1;;
		 	-> rrel_3: rrel_fixed: rrel_scp_var: _idtf;;

            -> rrel_set_2: rrel_fixed: rrel_scp_var: _answer_proc_of_finding_identifier_extended;;

	        => nrel_goto: .proc_of_finding_identifier_extended_operator4A;;
            *);;
	
		 -> .proc_of_finding_identifier_extended_operator5
			(*
		 	<- eraseEl;;

		 	-> rrel_1: rrel_fixed: rrel_scp_var: rrel_erase: _set_of_languages;;

            => nrel_goto: .proc_of_finding_identifier_extended_operator6;;
		 	*);;
		 	
		 -> .proc_of_finding_identifier_extended_operator6
			(*
		 	<- eraseEl;;

		 	-> rrel_1: rrel_fixed: rrel_scp_var: rrel_erase: _mainset;;

            => nrel_goto:.proc_of_finding_identifier_extended_operator1B;;
		 	*);;

		-> .proc_of_finding_identifier_extended_operator_return 
			(*
			<- return;;
			*);;
		*);;
	*);;
